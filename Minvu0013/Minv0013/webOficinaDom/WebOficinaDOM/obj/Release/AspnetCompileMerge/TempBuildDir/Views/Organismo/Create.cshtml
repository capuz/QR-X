@model WebOficinaDOM.Models.DTO.Organismo
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">Crear Organismo</h4>
</div>
<div class="modal-body">
    @using (Html.BeginForm("CreateNew", "Organismo", FormMethod.Post, new { Id = "CreateOrganismForm", @class = "prevent-default" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group required">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Editor("Nombre", new { htmlAttributes = new { @class = "form-control countChar prevent-invalid-char", placeholder = "Ej: Seremi Santiago", maxLength = "75" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    <div class="pull-right" id="ccNombre" name="ccNombre">
                        @{
        var lengthNombre = Model.IsNull() || Model.Nombre.IsNull() ? default(int) : Model.Nombre.Length;
        var textoNombre = string.Format("{0} caracteres de {1} máximo", lengthNombre, 75);
                        }
                        @textoNombre
                    </div>
                </div>
            </div>
            <div class="form-group required">
                @Html.LabelFor(model => model.OrganismoTipo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.IdOrganismoTipo,
                    new SelectList(Model.OrganismoTipoList, "IdOrganismoTipo", "Nombre"), "--Seleccione--",
                    new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdOrganismoTipo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group required">
                @Html.LabelFor(model => model.OrganismoPadre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.IdOrganismoPadre,
                    new SelectList(Model.OrganismoPadreList, "IdOrganismo", "Nombre"), "--Seleccione--",
                    new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdOrganismoPadre, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control countChar prevent-invalid-char", placeholder = "Ej: Municipalidad de Santiago...", maxLength = "2048" } })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    <div class="pull-right" id="ccDescripcion" name="ccDescripcion">
                        @{
        var lengthdescripcion = Model.IsNull() || Model.Descripcion.IsNull() ? default(int) : Model.Descripcion.Length;
        var textodescripcion = string.Format("{0} caracteres de {1} máximo", lengthdescripcion, 2048);
                        }
                        @textodescripcion
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Icono, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" id="fuIcono" />
                </div>
                @Html.HiddenFor(m => m.Icono)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" id="fuLogo" />
                </div>
                @Html.HiddenFor(m => m.Logo)
            </div>
            <div class="form-group">
                @Html.Label("Activo", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBox("activo", htmlAttributes: new { @class = "control-label" })
                </div>
            </div>
        </div>
    }
</div>
<div class="modal-footer">
    <div class="row">
        <div class="col-md-6">
            <div class="pull-left">
                @Html.Label("*", new { style = "color:red" }) @Html.Label("Campo obligatorio", new { @class = "small" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="pull-right">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                <button type="button" id="btnSaveNewOrganism" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>


