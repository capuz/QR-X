//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace webApiDom.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class domEntities : DbContext
    {
        public domEntities()
            : base("name=domEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AUDITORIA> AUDITORIA { get; set; }
        public virtual DbSet<COMUNA> COMUNA { get; set; }
        public virtual DbSet<CONTENIDO_LOGO> CONTENIDO_LOGO { get; set; }
        public virtual DbSet<CONTENIDO_PRINCIPAL> CONTENIDO_PRINCIPAL { get; set; }
        public virtual DbSet<CONTENIDO_SECUNDARIO> CONTENIDO_SECUNDARIO { get; set; }
        public virtual DbSet<MENU> MENU { get; set; }
        public virtual DbSet<NOTICIA> NOTICIA { get; set; }
        public virtual DbSet<NOTICIA_GALERIA> NOTICIA_GALERIA { get; set; }
        public virtual DbSet<ORGANISMO> ORGANISMO { get; set; }
        public virtual DbSet<ORGANISMO_TIPO> ORGANISMO_TIPO { get; set; }
        public virtual DbSet<PERFIL> PERFIL { get; set; }
        public virtual DbSet<PERMISO> PERMISO { get; set; }
        public virtual DbSet<PERMISO_OBJETO> PERMISO_OBJETO { get; set; }
        public virtual DbSet<REGION> REGION { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<USUARIO> USUARIO { get; set; }
        public virtual DbSet<USUARIO_PERFIL> USUARIO_PERFIL { get; set; }
    
        public virtual ObjectResult<USP_AUDITORIA_Select_Filtro_Result> USP_AUDITORIA_Select_Filtro(string tipoAuditoria, string desde, string hasta)
        {
            var tipoAuditoriaParameter = tipoAuditoria != null ?
                new ObjectParameter("TipoAuditoria", tipoAuditoria) :
                new ObjectParameter("TipoAuditoria", typeof(string));
    
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_AUDITORIA_Select_Filtro_Result>("USP_AUDITORIA_Select_Filtro", tipoAuditoriaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<USP_MENU_Select_HomePage_Result> USP_MENU_Select_HomePage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MENU_Select_HomePage_Result>("USP_MENU_Select_HomePage");
        }
    
        public virtual ObjectResult<USP_USUARIO_Select_Filtro_Result> USP_USUARIO_Select_Filtro(string idUsuario, string rut, string nombre, string idComuna, string idRegion)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(string));
    
            var rutParameter = rut != null ?
                new ObjectParameter("Rut", rut) :
                new ObjectParameter("Rut", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idComunaParameter = idComuna != null ?
                new ObjectParameter("idComuna", idComuna) :
                new ObjectParameter("idComuna", typeof(string));
    
            var idRegionParameter = idRegion != null ?
                new ObjectParameter("idRegion", idRegion) :
                new ObjectParameter("idRegion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_USUARIO_Select_Filtro_Result>("USP_USUARIO_Select_Filtro", idUsuarioParameter, rutParameter, nombreParameter, idComunaParameter, idRegionParameter);
        }
    
        public virtual ObjectResult<USP_MENU_Select_Mantenedor_Result> USP_MENU_Select_Mantenedor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MENU_Select_Mantenedor_Result>("USP_MENU_Select_Mantenedor");
        }
    
        public virtual ObjectResult<USP_ORGANISMO_Select_Filtro_Result> USP_ORGANISMO_Select_Filtro(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ORGANISMO_Select_Filtro_Result>("USP_ORGANISMO_Select_Filtro", nombreParameter);
        }
    }
}
